<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
       	http://www.springframework.org/schema/beans
       	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       	http://www.springframework.org/schema/context
 		http://www.springframework.org/schema/context/spring-context-3.1.xsd
 		http://www.springframework.org/schema/tx
    	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    	http://www.springframework.org/schema/aop
    	http://www.springframework.org/schema/tx/spring-aop-3.1.xsd
       	http://www.springframework.org/schema/mvc
       	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/task
   			http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />

	<context:component-scan base-package="com.telappoint.adminresv" />

	<bean  class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
		<property name="contentType" value="text/plain" />
	</bean>

	<bean id="jsonResolver" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
		<property name="objectMapper" ref="jsonMapper" />
	</bean>

	<bean id="jsonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="objectMapper" ref="jsonMapper" />
	</bean>

	<bean id="jsonMapper" class="org.codehaus.jackson.map.ObjectMapper">
		<property name="serializationConfig.annotationIntrospector"
			ref="jsonIntrospector" />
		<property name="deserializationConfig.annotationIntrospector"
			ref="jsonIntrospector" />
	</bean>

	<bean id="jsonIntrospector" class="org.codehaus.jackson.xc.JaxbAnnotationIntrospector">
	</bean>

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		 <property name="basename" value="message"/>
	</bean>

<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- one of the properties available; the maximum file size (150 MB) in bytes -->
        <property name="maxUploadSize" value="157289999"/>
</bean>

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<!-- NOTE: it is important to specify the order property, so this adapter 
			will be attempted before the HandlerAdapter that Spring MVC automatically 
			configures. This is because a MappingJacksonHttpMessageConverter is registered 
			automatically with the default adapter that will attempt to handle any Java 
			object including BufferedImage. -->
		<property name="order" value="1" />
		<property name="messageConverters">
			<list>
				<!-- Default converters -->
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter" />
				<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />

				<!-- Converter for images -->
				<bean
					class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.ResourceHttpMessageConverter" />

				<!-- This must come after our image converter -->
				<bean
					class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

		<bean id="handlerMapping"
			class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	
<!-- register "global" interceptor beans to apply to all registered HandlerMappings -->
<mvc:interceptors>
    <bean class="com.telappoint.adminresv.filters.HomeBeanInterceptor"/>
</mvc:interceptors>

	<bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass">
			<value>
				org.springframework.web.servlet.view.tiles2.TilesView
        </value>
		</property>
	</bean>
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>
	<mvc:annotation-driven />	
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" />
	
	<!--  Executor for the methods marked wiht @async annotations--> 
	<!--  http://docs.spring.io/spring/docs/3.2.x/spring-framework-reference/html/scheduling.html#scheduling-annotation-support-async -->
	<task:executor id="resvMailExecutor"  pool-size="5-25"  queue-capacity="100"  rejection-policy="CALLER_RUNS"/>  
	<!--  Configuration for the Runtime  -->
	<task:annotation-driven executor="resvMailExecutor" />

</beans>
